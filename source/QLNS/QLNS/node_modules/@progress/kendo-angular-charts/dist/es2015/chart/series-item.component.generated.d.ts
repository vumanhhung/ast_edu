import { drawing } from '@progress/kendo-drawing';
import { CollectionService } from '../common/collection.service';
import { CollectionItemComponent } from '../common/collection-item.component';
import { ConfigurationService } from '../common/configuration.service';
import { Border, BulletTarget, DashType, LabelConnectors } from '../common/property-types';
import { Margin, NegativeBubbleValues, Overlay, SeriesLine, SeriesType, SeriesWhiskers } from '../common/property-types';
import { LineStyle, SeriesStack, SeriesVisualArgs } from '../common/property-types';
import { SeriesErrorBars, SeriesExtremes, SeriesHighlight, SeriesLabels, SeriesMarkers, SeriesNotes, SeriesOutliers, SeriesTooltip, Series } from '../common/property-types';
/**
 * @hidden
 */
export declare abstract class SeriesItemComponentGenerated extends CollectionItemComponent implements Series {
    protected configurationService: ConfigurationService;
    protected collectionService: CollectionService;
    aggregate: any;
    axis: string;
    border: Border;
    categoryAxis: string;
    categoryField: string;
    closeField: string;
    color: any;
    colorField: string;
    connectors: LabelConnectors;
    currentField: string;
    dashType: DashType;
    data: any[];
    downColor: string;
    downColorField: string;
    dynamicHeight: boolean;
    dynamicSlope: boolean;
    errorHighField: string;
    errorLowField: string;
    explodeField: string;
    field: string;
    fromField: string;
    gap: number;
    highField: string;
    holeSize: number;
    line: SeriesLine;
    lowField: string;
    lowerField: string;
    margin: Margin | number;
    maxSize: number;
    meanField: string;
    medianField: string;
    minSize: number;
    missingValues: 'gap' | 'interpolate' | 'zero';
    name: string;
    neckRatio: number;
    negativeColor: string;
    negativeValues: NegativeBubbleValues;
    noteTextField: string;
    opacity: number;
    openField: string;
    outliersField: string;
    overlay: Overlay;
    padding: number;
    q1Field: string;
    q3Field: string;
    segmentSpacing: number;
    size: number;
    sizeField: string;
    spacing: number;
    stack: boolean | string | SeriesStack;
    startAngle: number;
    style: LineStyle;
    summaryField: string;
    target: BulletTarget;
    toField: string;
    type: SeriesType;
    upperField: string;
    visible: boolean;
    visibleInLegend: boolean;
    visibleInLegendField: string;
    visual: (e: SeriesVisualArgs) => drawing.Element;
    width: number;
    whiskers: SeriesWhiskers;
    xAxis: string;
    xErrorHighField: string;
    xErrorLowField: string;
    xField: string;
    yAxis: string;
    yErrorHighField: string;
    yErrorLowField: string;
    yField: string;
    zIndex: number;
    errorBars: SeriesErrorBars;
    extremes: SeriesExtremes;
    highlight: SeriesHighlight;
    labels: SeriesLabels;
    markers: SeriesMarkers;
    notes: SeriesNotes;
    outliers: SeriesOutliers;
    tooltip: SeriesTooltip;
    constructor(configurationService: ConfigurationService, collectionService: CollectionService);
}
