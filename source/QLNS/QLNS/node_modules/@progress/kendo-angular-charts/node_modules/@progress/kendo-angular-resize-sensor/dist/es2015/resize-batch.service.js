import { Injectable, NgZone } from '@angular/core';
/**
 * @hidden
 */
export class ResizeBatchService {
    constructor(ngZone) {
        this.ngZone = ngZone;
        this.scheduled = [];
    }
    schedule(instance, method) {
        this.scheduled.push({ instance, method });
        this.ngZone.runOutsideAngular(() => {
            clearTimeout(this.timeout);
            this.timeout = setTimeout(() => {
                this.scheduled.forEach(item => {
                    item.method.call(item.instance);
                });
                this.scheduled = [];
            }, 0);
        });
    }
    isScheduled(instance) {
        return Boolean(this.scheduled.find(item => item.instance === instance));
    }
    cancel(instance) {
        const scheduled = this.scheduled;
        const count = scheduled.length;
        for (let idx = 0; idx < count; idx++) {
            if (scheduled[idx].instance === instance) {
                scheduled.splice(idx, 1);
                if (!scheduled.length) {
                    clearTimeout(this.timeout);
                }
                return;
            }
        }
    }
    ngOnDestroy() {
        clearTimeout(this.timeout);
    }
}
ResizeBatchService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
ResizeBatchService.ctorParameters = () => [
    { type: NgZone, },
];
